# This file declares the C-API corresponding to metatensor.h

# This file is automatically generated by `julia/scripts/generate-declarations.py`,
# do not edit it manually!


# ========== Manual definitions ========= #
if Sys.WORD_SIZE == 32
    UIntptr = UInt32
elseif Sys.WORD_SIZE == 64
    UIntptr = UInt64
else
    error("unknown size of uintptr_t")
end

Cbool = Cuchar
mts_status_t = Int32
mts_data_origin_t = UInt64

mts_create_array_callback_t = Ptr{Cvoid}  # TODO: actual type
mts_realloc_buffer_t = Ptr{Cvoid}         # TODO: actual type

# ====== Enf of manual definitions ====== #


# ===== Macros definitions
MTS_SUCCESS = 0
MTS_INVALID_PARAMETER_ERROR = 1
MTS_IO_ERROR = 2
MTS_SERIALIZATION_ERROR = 3
MTS_BUFFER_SIZE_ERROR = 254
MTS_INTERNAL_ERROR = 255


# ===== Enum definitions


# ===== Struct definitions
struct mts_block_t
end

struct mts_tensormap_t
end

struct mts_labels_t
    internal_ptr_ :: Ptr{Cvoid}
    names :: Ptr{Ptr{Cchar}}
    values :: Ptr{Int32}
    size :: UIntptr
    count :: UIntptr
end

struct mts_sample_mapping_t
    input :: UIntptr
    output :: UIntptr
end

struct mts_array_t
    ptr :: Ptr{Cvoid}
    origin :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{mts_data_origin_t}) -> mts_status_t =#
    data :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{Ptr{Cdouble}}) -> mts_status_t =#
    shape :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{Ptr{UIntptr}}, Ptr{UIntptr}) -> mts_status_t =#
    reshape :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{UIntptr}, UIntptr) -> mts_status_t =#
    swap_axes :: Ptr{Cvoid} #= (Ptr{Cvoid}, UIntptr, UIntptr) -> mts_status_t =#
    create :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{UIntptr}, UIntptr, Ptr{mts_array_t}) -> mts_status_t =#
    copy :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{mts_array_t}) -> mts_status_t =#
    destroy :: Ptr{Cvoid} #= (Ptr{Cvoid}) -> Cvoid =#
    move_samples_from :: Ptr{Cvoid} #= (Ptr{Cvoid}, Ptr{Cvoid}, Ptr{mts_sample_mapping_t}, UIntptr, UIntptr, UIntptr) -> mts_status_t =#
end



# ===== Function definitions

function mts_disable_panic_printing()
    ccall((:mts_disable_panic_printing, libmetatensor), 
        Cvoid,
        (),
        
    )
end

function mts_version()
    ccall((:mts_version, libmetatensor), 
        Ptr{Cchar},
        (),
        
    )
end

function mts_last_error()
    ccall((:mts_last_error, libmetatensor), 
        Ptr{Cchar},
        (),
        
    )
end

function mts_labels_position(labels::mts_labels_t, values::Ptr{Int32}, values_count::UIntptr, result::Ptr{Int64})
    ccall((:mts_labels_position, libmetatensor), 
        mts_status_t,
        (mts_labels_t, Ptr{Int32}, UIntptr, Ptr{Int64},),
        labels, values, values_count, result
    )
end

function mts_labels_create(labels::Ptr{mts_labels_t})
    ccall((:mts_labels_create, libmetatensor), 
        mts_status_t,
        (Ptr{mts_labels_t},),
        labels
    )
end

function mts_labels_set_user_data(labels::mts_labels_t, user_data::Ptr{Cvoid}, user_data_delete::Ptr{Cvoid} #= (Ptr{Cvoid}) -> Cvoid =#)
    ccall((:mts_labels_set_user_data, libmetatensor), 
        mts_status_t,
        (mts_labels_t, Ptr{Cvoid}, Ptr{Cvoid} #= (Ptr{Cvoid}) -> Cvoid =#,),
        labels, user_data, user_data_delete
    )
end

function mts_labels_user_data(labels::mts_labels_t, user_data::Ptr{Ptr{Cvoid}})
    ccall((:mts_labels_user_data, libmetatensor), 
        mts_status_t,
        (mts_labels_t, Ptr{Ptr{Cvoid}},),
        labels, user_data
    )
end

function mts_labels_clone(labels::mts_labels_t, clone::Ptr{mts_labels_t})
    ccall((:mts_labels_clone, libmetatensor), 
        mts_status_t,
        (mts_labels_t, Ptr{mts_labels_t},),
        labels, clone
    )
end

function mts_labels_union(first::mts_labels_t, second::mts_labels_t, result::Ptr{mts_labels_t}, first_mapping::Ptr{Int64}, first_mapping_count::UIntptr, second_mapping::Ptr{Int64}, second_mapping_count::UIntptr)
    ccall((:mts_labels_union, libmetatensor), 
        mts_status_t,
        (mts_labels_t, mts_labels_t, Ptr{mts_labels_t}, Ptr{Int64}, UIntptr, Ptr{Int64}, UIntptr,),
        first, second, result, first_mapping, first_mapping_count, second_mapping, second_mapping_count
    )
end

function mts_labels_intersection(first::mts_labels_t, second::mts_labels_t, result::Ptr{mts_labels_t}, first_mapping::Ptr{Int64}, first_mapping_count::UIntptr, second_mapping::Ptr{Int64}, second_mapping_count::UIntptr)
    ccall((:mts_labels_intersection, libmetatensor), 
        mts_status_t,
        (mts_labels_t, mts_labels_t, Ptr{mts_labels_t}, Ptr{Int64}, UIntptr, Ptr{Int64}, UIntptr,),
        first, second, result, first_mapping, first_mapping_count, second_mapping, second_mapping_count
    )
end

function mts_labels_difference(first::mts_labels_t, second::mts_labels_t, result::Ptr{mts_labels_t}, first_mapping::Ptr{Int64}, first_mapping_count::UIntptr)
    ccall((:mts_labels_difference, libmetatensor), 
        mts_status_t,
        (mts_labels_t, mts_labels_t, Ptr{mts_labels_t}, Ptr{Int64}, UIntptr,),
        first, second, result, first_mapping, first_mapping_count
    )
end

function mts_labels_select(labels::mts_labels_t, selection::mts_labels_t, selected::Ptr{Int64}, selected_count::Ptr{UIntptr})
    ccall((:mts_labels_select, libmetatensor), 
        mts_status_t,
        (mts_labels_t, mts_labels_t, Ptr{Int64}, Ptr{UIntptr},),
        labels, selection, selected, selected_count
    )
end

function mts_labels_free(labels::Ptr{mts_labels_t})
    ccall((:mts_labels_free, libmetatensor), 
        mts_status_t,
        (Ptr{mts_labels_t},),
        labels
    )
end

function mts_register_data_origin(name::Ptr{Cchar}, origin::Ptr{mts_data_origin_t})
    ccall((:mts_register_data_origin, libmetatensor), 
        mts_status_t,
        (Ptr{Cchar}, Ptr{mts_data_origin_t},),
        name, origin
    )
end

function mts_get_data_origin(origin::mts_data_origin_t, buffer::Ptr{Cchar}, buffer_size::UIntptr)
    ccall((:mts_get_data_origin, libmetatensor), 
        mts_status_t,
        (mts_data_origin_t, Ptr{Cchar}, UIntptr,),
        origin, buffer, buffer_size
    )
end

function mts_block(data::mts_array_t, samples::mts_labels_t, components::Ptr{mts_labels_t}, components_count::UIntptr, properties::mts_labels_t)
    ccall((:mts_block, libmetatensor), 
        Ptr{mts_block_t},
        (mts_array_t, mts_labels_t, Ptr{mts_labels_t}, UIntptr, mts_labels_t,),
        data, samples, components, components_count, properties
    )
end

function mts_block_free(block::Ptr{mts_block_t})
    ccall((:mts_block_free, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t},),
        block
    )
end

function mts_block_copy(block::Ptr{mts_block_t})
    ccall((:mts_block_copy, libmetatensor), 
        Ptr{mts_block_t},
        (Ptr{mts_block_t},),
        block
    )
end

function mts_block_labels(block::Ptr{mts_block_t}, axis::UIntptr, labels::Ptr{mts_labels_t})
    ccall((:mts_block_labels, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t}, UIntptr, Ptr{mts_labels_t},),
        block, axis, labels
    )
end

function mts_block_gradient(block::Ptr{mts_block_t}, parameter::Ptr{Cchar}, gradient::Ptr{Ptr{mts_block_t}})
    ccall((:mts_block_gradient, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t}, Ptr{Cchar}, Ptr{Ptr{mts_block_t}},),
        block, parameter, gradient
    )
end

function mts_block_data(block::Ptr{mts_block_t}, data::Ptr{mts_array_t})
    ccall((:mts_block_data, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t}, Ptr{mts_array_t},),
        block, data
    )
end

function mts_block_add_gradient(block::Ptr{mts_block_t}, parameter::Ptr{Cchar}, gradient::Ptr{mts_block_t})
    ccall((:mts_block_add_gradient, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t}, Ptr{Cchar}, Ptr{mts_block_t},),
        block, parameter, gradient
    )
end

function mts_block_gradients_list(block::Ptr{mts_block_t}, parameters::Ptr{Ptr{Ptr{Cchar}}}, parameters_count::Ptr{UIntptr})
    ccall((:mts_block_gradients_list, libmetatensor), 
        mts_status_t,
        (Ptr{mts_block_t}, Ptr{Ptr{Ptr{Cchar}}}, Ptr{UIntptr},),
        block, parameters, parameters_count
    )
end

function mts_tensormap(keys::mts_labels_t, blocks::Ptr{Ptr{mts_block_t}}, blocks_count::UIntptr)
    ccall((:mts_tensormap, libmetatensor), 
        Ptr{mts_tensormap_t},
        (mts_labels_t, Ptr{Ptr{mts_block_t}}, UIntptr,),
        keys, blocks, blocks_count
    )
end

function mts_tensormap_free(tensor::Ptr{mts_tensormap_t})
    ccall((:mts_tensormap_free, libmetatensor), 
        mts_status_t,
        (Ptr{mts_tensormap_t},),
        tensor
    )
end

function mts_tensormap_copy(tensor::Ptr{mts_tensormap_t})
    ccall((:mts_tensormap_copy, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{mts_tensormap_t},),
        tensor
    )
end

function mts_tensormap_keys(tensor::Ptr{mts_tensormap_t}, keys::Ptr{mts_labels_t})
    ccall((:mts_tensormap_keys, libmetatensor), 
        mts_status_t,
        (Ptr{mts_tensormap_t}, Ptr{mts_labels_t},),
        tensor, keys
    )
end

function mts_tensormap_block_by_id(tensor::Ptr{mts_tensormap_t}, block::Ptr{Ptr{mts_block_t}}, index::UIntptr)
    ccall((:mts_tensormap_block_by_id, libmetatensor), 
        mts_status_t,
        (Ptr{mts_tensormap_t}, Ptr{Ptr{mts_block_t}}, UIntptr,),
        tensor, block, index
    )
end

function mts_tensormap_blocks_matching(tensor::Ptr{mts_tensormap_t}, block_indexes::Ptr{UIntptr}, count::Ptr{UIntptr}, selection::mts_labels_t)
    ccall((:mts_tensormap_blocks_matching, libmetatensor), 
        mts_status_t,
        (Ptr{mts_tensormap_t}, Ptr{UIntptr}, Ptr{UIntptr}, mts_labels_t,),
        tensor, block_indexes, count, selection
    )
end

function mts_tensormap_keys_to_properties(tensor::Ptr{mts_tensormap_t}, keys_to_move::mts_labels_t, sort_samples::Cbool)
    ccall((:mts_tensormap_keys_to_properties, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{mts_tensormap_t}, mts_labels_t, Cbool,),
        tensor, keys_to_move, sort_samples
    )
end

function mts_tensormap_components_to_properties(tensor::Ptr{mts_tensormap_t}, dimensions::Ptr{Ptr{Cchar}}, dimensions_count::UIntptr)
    ccall((:mts_tensormap_components_to_properties, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{mts_tensormap_t}, Ptr{Ptr{Cchar}}, UIntptr,),
        tensor, dimensions, dimensions_count
    )
end

function mts_tensormap_keys_to_samples(tensor::Ptr{mts_tensormap_t}, keys_to_move::mts_labels_t, sort_samples::Cbool)
    ccall((:mts_tensormap_keys_to_samples, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{mts_tensormap_t}, mts_labels_t, Cbool,),
        tensor, keys_to_move, sort_samples
    )
end

function mts_labels_load(path::Ptr{Cchar}, labels::Ptr{mts_labels_t})
    ccall((:mts_labels_load, libmetatensor), 
        mts_status_t,
        (Ptr{Cchar}, Ptr{mts_labels_t},),
        path, labels
    )
end

function mts_labels_load_buffer(buffer::Ptr{UInt8}, buffer_count::UIntptr, labels::Ptr{mts_labels_t})
    ccall((:mts_labels_load_buffer, libmetatensor), 
        mts_status_t,
        (Ptr{UInt8}, UIntptr, Ptr{mts_labels_t},),
        buffer, buffer_count, labels
    )
end

function mts_labels_save(path::Ptr{Cchar}, labels::mts_labels_t)
    ccall((:mts_labels_save, libmetatensor), 
        mts_status_t,
        (Ptr{Cchar}, mts_labels_t,),
        path, labels
    )
end

function mts_labels_save_buffer(buffer::Ptr{Ptr{UInt8}}, buffer_count::Ptr{UIntptr}, realloc_user_data::Ptr{Cvoid}, realloc::mts_realloc_buffer_t, labels::mts_labels_t)
    ccall((:mts_labels_save_buffer, libmetatensor), 
        mts_status_t,
        (Ptr{Ptr{UInt8}}, Ptr{UIntptr}, Ptr{Cvoid}, mts_realloc_buffer_t, mts_labels_t,),
        buffer, buffer_count, realloc_user_data, realloc, labels
    )
end

function mts_block_load(path::Ptr{Cchar}, create_array::mts_create_array_callback_t)
    ccall((:mts_block_load, libmetatensor), 
        Ptr{mts_block_t},
        (Ptr{Cchar}, mts_create_array_callback_t,),
        path, create_array
    )
end

function mts_block_load_buffer(buffer::Ptr{UInt8}, buffer_count::UIntptr, create_array::mts_create_array_callback_t)
    ccall((:mts_block_load_buffer, libmetatensor), 
        Ptr{mts_block_t},
        (Ptr{UInt8}, UIntptr, mts_create_array_callback_t,),
        buffer, buffer_count, create_array
    )
end

function mts_block_save(path::Ptr{Cchar}, block::Ptr{mts_block_t})
    ccall((:mts_block_save, libmetatensor), 
        mts_status_t,
        (Ptr{Cchar}, Ptr{mts_block_t},),
        path, block
    )
end

function mts_block_save_buffer(buffer::Ptr{Ptr{UInt8}}, buffer_count::Ptr{UIntptr}, realloc_user_data::Ptr{Cvoid}, realloc::mts_realloc_buffer_t, block::Ptr{mts_block_t})
    ccall((:mts_block_save_buffer, libmetatensor), 
        mts_status_t,
        (Ptr{Ptr{UInt8}}, Ptr{UIntptr}, Ptr{Cvoid}, mts_realloc_buffer_t, Ptr{mts_block_t},),
        buffer, buffer_count, realloc_user_data, realloc, block
    )
end

function mts_tensormap_load(path::Ptr{Cchar}, create_array::mts_create_array_callback_t)
    ccall((:mts_tensormap_load, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{Cchar}, mts_create_array_callback_t,),
        path, create_array
    )
end

function mts_tensormap_load_buffer(buffer::Ptr{UInt8}, buffer_count::UIntptr, create_array::mts_create_array_callback_t)
    ccall((:mts_tensormap_load_buffer, libmetatensor), 
        Ptr{mts_tensormap_t},
        (Ptr{UInt8}, UIntptr, mts_create_array_callback_t,),
        buffer, buffer_count, create_array
    )
end

function mts_tensormap_save(path::Ptr{Cchar}, tensor::Ptr{mts_tensormap_t})
    ccall((:mts_tensormap_save, libmetatensor), 
        mts_status_t,
        (Ptr{Cchar}, Ptr{mts_tensormap_t},),
        path, tensor
    )
end

function mts_tensormap_save_buffer(buffer::Ptr{Ptr{UInt8}}, buffer_count::Ptr{UIntptr}, realloc_user_data::Ptr{Cvoid}, realloc::mts_realloc_buffer_t, tensor::Ptr{mts_tensormap_t})
    ccall((:mts_tensormap_save_buffer, libmetatensor), 
        mts_status_t,
        (Ptr{Ptr{UInt8}}, Ptr{UIntptr}, Ptr{Cvoid}, mts_realloc_buffer_t, Ptr{mts_tensormap_t},),
        buffer, buffer_count, realloc_user_data, realloc, tensor
    )
end
