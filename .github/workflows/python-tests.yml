name: Python tests

on:
  push:
    branches: [main]
  pull_request:
    # Check all PR

concurrency:
  group: python-tests-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  python-tests:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / Python ${{ matrix.python-version }} / Torch ${{ matrix.torch-version }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            python-version: "3.10"
            torch-version: "2.1"
            numpy-version-pin: "<2.0"
          - os: ubuntu-24.04
            python-version: "3.10"
            torch-version: "2.8"
          - os: ubuntu-24.04
            python-version: "3.13"
            torch-version: "2.8"
          - os: macos-15
            python-version: "3.13"
            torch-version: "2.8"
          - os: windows-2022
            python-version: "3.13"
            torch-version: "2.8"
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          activate-environment: true

      - name: setup rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Grab jq for cargo-cache
        uses: dcarbone/install-jq-action@v3

      - name: Cache Rust dependencies
        uses: Leafwing-Studios/cargo-cache@v2
        with:
          sweep-cache: true

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.10.0"

      - name: setup MSVC command prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup sccache environnement variables
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "CMAKE_C_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV

      - name: install tests dependencies
        run: |
          uv tool install tox --with tox-uv

      - name: run tests
        run: tox
        env:
          PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
          METATENSOR_TESTS_TORCH_VERSION: ${{ matrix.torch-version }}
          METATENSOR_TESTS_NUMPY_VERSION_PIN:  ${{ matrix.numpy-version-pin }}
