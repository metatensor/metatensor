name: Documentation

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    # Check all PR

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  pull-requests: write

jobs:
  build-and-publish:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: setup rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.rust-target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust-target }}-cargo-
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.0"
          python-version: "3.13"
          enable-cache: true
          activate-environment: true
      - name: install dependencies
        run: |
          uv tool install tox --with tox-uv
          sudo apt install doxygen
      - name: build documentation
        env:
          # Use the CPU only version of torch when building/running the code
          PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
        run: tox -e docs

      - name: store documentation as github artifact to be downloaded by users
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/build/html/*
          overwrite: true  # only keep the latest version of the documentation

      - name: Comment with download link
        uses: PicoCentauri/comment-artifact@v1
        if: github.event.pull_request.head.repo.fork == false
        with:
          name: docs
          description: ðŸ“š Download documentation for this pull-request

      - name: put documentation in the website
        run: |
          git clone https://github.com/metatensor/docs metatensor-docs
          rm -rf metatensor-docs/.git
          cd metatensor-docs

          REF_KIND=$(echo $GITHUB_REF | cut -d / -f2)
          if [[ "$REF_KIND" == "tags" ]]; then
              TAG=${GITHUB_REF#refs/tags/}
              mv ../docs/build/html $TAG
          else
              rm -rf latest
              mv ../docs/build/html latest
          fi

      - name: deploy to metatensor-docs
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          external_repository: metatensor/docs
          deploy_key: ${{ secrets.METATENSOR_DOCS_SSH_KEY }}
          publish_branch: main
          publish_dir: ./metatensor-docs/
          force_orphan: true
